
Time Complexity: O(n) where n is the number of nodes in Linked List. The code traverses the linked list only once.

Auxiliary Space : O(1)


class Solution{
    //Function to rotate a linked list.
    public Node rotate(Node head, int k) {
        if(k==0)
         return head;
        
        Node current=head;
        
        int count=1;
        while(count<k && current!=null){
            current=current.next;
            count++;
        }
        if(current==null)
         return head;
         
         Node kthNode=current;
         while(current.next!=null){
             current=current.next;
         }
         
         current.next=head;
         
         head=kthNode.next;
         
         kthNode.next=null;
         
         return head;
        
    }
}
